
# This file was generated by the Tkinter Designer by Parth Jadhav
# https://github.com/ParthJadhav/Tkinter-Designer


import subprocess
import pyaudio
import wave
import tkinter as tk
import threading
from pathlib import Path
import time
import sys

import pygame

from findScore import printScore3, clear, clear1, clear2, clear3
from scores import center_window
sys.path.append('AudioDyslexia')

# from tkinter import *
# Explicit imports to satisfy Flake8
from tkinter import Tk, Canvas, Entry, Text, Button, PhotoImage, messagebox, IntVar, Radiobutton
from AudioDyslexia.resutl import AudioRecord

from scores import addScore3

OUTPUT_PATH = Path(__file__).parent
ASSETS_PATH = OUTPUT_PATH / Path(r"C:\YusrGP\YusrProject\assets\frame12")


def relative_to_assets(path: str) -> Path:
    return ASSETS_PATH / Path(path)


def open_HomePage():
    clear()
    clear1()
    clear2()
    clear3()
    file_to_run_path = r"C:\YusrGP\YusrProject\HomePage.py"
    window.destroy()
    subprocess.run(["python", file_to_run_path], check=True)
    #window.destroy() # Close the current window
    #import HomePage.py

window = Tk()
window.title('Letters')

window.geometry("396x688")
window.configure(bg = "#FFEDED")


#------------------------ voice recording ------------------------
timerValue = tk.IntVar()

def timerfunction():
    for i in range(3, 0, -1):
        counter['text'] = str(i)
        counter.update_idletasks()
        time.sleep(1)
    counter['text'] = "0"

def record_audio(filename, duration, sample_rate, channels):
    audio = pyaudio.PyAudio()

    stream = audio.open(
        format=pyaudio.paInt16,
        channels=channels,
        rate=sample_rate,
        input=True,
        frames_per_buffer=1024
    )

    print("Recording...")

    frames = []
    for _ in range(0, int(sample_rate / 1024 * duration)):
        data = stream.read(1024)
        frames.append(data)

    print("Finished recording.")

    stream.stop_stream()
    stream.close()
    audio.terminate()

    with wave.open(filename, 'wb') as wf:
        wf.setnchannels(channels)
        wf.setsampwidth(audio.get_sample_size(pyaudio.paInt16))
        wf.setframerate(sample_rate)
        wf.writeframes(b''.join(frames))
    

def record_and_save_audio(filename, duration=1, sample_rate=44100, channels=1):
    # Create a thread for the timer
    counter_thread = threading.Thread(target=timerfunction)
    counter_thread.start()

    # Create a thread for audio recording
    audio_thread = threading.Thread(target=record_audio, args=(filename, duration, sample_rate, channels))
    audio_thread.start()

#-------------------------------------------------------
canvas = Canvas(
    window,
    bg = "#FFEDED",
    height = 688,
    width = 396,
    bd = 0,
    highlightthickness = 0,
    relief = "ridge"
)

canvas.place(x = 0, y = 0)
image_image_1 = PhotoImage(
    file=relative_to_assets("image_1.png"))
image_1 = canvas.create_image(
    203.0,
    618.0,
    image=image_image_1
)

image_image_2 = PhotoImage(
    file=relative_to_assets("image_2.png"))
image_2 = canvas.create_image(
    198.0,
    121.0,
    image=image_image_2
)

pygame.init()
def perform_action(event):
    sound = pygame.mixer.Sound(r"C:\YusrGP\YusrProject\assets\frame12\SayLetter.mp3")
    sound.play()
canvas.tag_bind(image_2, "<Button-1>", perform_action)

image_image_3 = PhotoImage(
    file=relative_to_assets("image_3.png"))
image_3 = canvas.create_image(
    238.0,
    320.0,
    image=image_image_3
)

image_image_4 = PhotoImage(
    file=relative_to_assets("image_4.png"))
image_4 = canvas.create_image(
    329.0,
    431.0,
    image=image_image_4
)

image_image_5 = PhotoImage(
    file=relative_to_assets("image_5.png"))
image_5 = canvas.create_image(
    329.0,
    516.0,
    image=image_image_5
)

# ---------- track the selected value of a radio button ----------
radio_var1 = IntVar()
radio_var2 = IntVar()
radio_var3 = IntVar()

#---------- button Recording the letter ka ----------
button_image_1 = PhotoImage(
    file=relative_to_assets("button_1.png"))

button_1 = Radiobutton(image=button_image_1,
 borderwidth=0, 
 indicatoron=0,
 highlightthickness=0, 
 variable=radio_var1,
 value=1,
 command=lambda: record_and_save_audio("recorded_audio6.wav"))

button_1.place(
    x=210.0,
    y=329.0,
    width=41.0,
    height=37.0
)

#----------button Recording the letter ki ----------
button_image_2 = PhotoImage(
    file=relative_to_assets("button_2.png"))
button_2 = Radiobutton(image=button_image_2,
 borderwidth=0,
 indicatoron=0,
 highlightthickness=0, 
 variable=radio_var2,
 value=3,
 command=lambda: record_and_save_audio("recorded_audio7.wav"))

button_2.place(
    x=212.0,
    y=410.0,
    width=37.0,
    height=42.0
)

#----------button Recording the letter ko ----------
button_image_3 = PhotoImage(
    file=relative_to_assets("button_3.png"))

button_3 = Radiobutton(image=button_image_3,
 borderwidth=0, 
 indicatoron=0,
 highlightthickness=0, 
 variable=radio_var3,
 value=5,
 command=lambda: record_and_save_audio("recorded_audio8.wav"))

button_3.place(
    x=210.0,
    y=495.0,
    width=41.0,
    height=43.0
)

#------------timing of audio recording---------
counter = tk.Label(bg="#FFEDED", text ="3", font = ("Arial", 12))
counter.place(x=214, y=540)

counter0 = tk.Label(bg="#FFEDED", text =":0", font = ("Arial", 12))
counter0.place(x=200, y=540)

counter00 = tk.Label(bg="#FFEDED", text =" 00", font = ("Arial", 12))
counter00.place(x=180, y=540)


#the first button لم يتعرف
button_image_4 = PhotoImage(
    file=relative_to_assets("button_4.png"))
button_4 = Radiobutton(
    image=button_image_4,
    indicatoron=0,
    borderwidth=0,
    highlightthickness=0,
    variable=radio_var1,
    value=2,
    relief="flat"
)
button_4.place(
    x=26.0,
    y=320.0,
    width=127.0,
    height=52.0
)

#the mid button لم يتعرف
button_image_5 = PhotoImage(
    file=relative_to_assets("button_5.png"))
button_5 = Radiobutton(
    image=button_image_5,
    indicatoron=0,
    borderwidth=0,
    highlightthickness=0,
    variable=radio_var2,
    value=4,
    relief="flat"
)
button_5.place(
    x=28.0,
    y=410.0,
    width=128.0,
    height=50.0
)

#the last button لم يتعرف
button_image_6 = PhotoImage(
    file=relative_to_assets("button_6.png"))
button_6 = Radiobutton(
    image=button_image_6,
    indicatoron=0,
    borderwidth=0,
    highlightthickness=0,
    variable=radio_var3,
    value=6,
    relief="flat"
)
button_6.place(
    x=31.0,
    y=499.0,
    width=125.0,
    height=47.0
)


# ----------------- function nextpage and alert ------------------
def open_FinishTestPage():
    if radio_var1.get() != 0 and radio_var2.get() != 0 and radio_var3.get() != 0:
        score = 0 
        if radio_var1.get()  == 2:
            score += 2
        elif radio_var1.get() == 1:
            AudioRecord(r"C:\YusrGP\YusrProject\recorded_audio6.wav",id1="ka",id2="ka")
        if radio_var2.get()  == 4:
            score += 2
        elif radio_var2.get() == 3:
            AudioRecord(r"C:\YusrGP\YusrProject\recorded_audio7.wav",id1="ki",id2="ki")
        if radio_var3.get()  == 6:
            score += 2
        elif radio_var3.get() == 5:
            AudioRecord(r"C:\YusrGP\YusrProject\recorded_audio8.wav",id1="ko",id2="ko")
        addScore3(score)
        printScore3()
        file_to_run_path = r"C:\YusrGP\YusrProject\FinishTestPage.py"
        window.destroy()
        subprocess.run(["python", file_to_run_path], check=True)
       #window.destroy()  # Destroy the current window and open page two
       #import FinishTestPage.py
    else:
       messagebox.showwarning(title="تنبيه", message="اكمل حل السؤال")


# ----------------- button nextpage ------------------
button_image_7 = PhotoImage(file=relative_to_assets("button_7.png"))
button_7 = Button(
image=button_image_7,
borderwidth=0,
highlightthickness=0,
command=open_FinishTestPage, # Call the function to open page two
relief="flat"
)
button_7.place(
    x=144.0,
    y=566.0,
    width=123.0,
    height=65.0
)

button_home_2 = PhotoImage(
    file=relative_to_assets("homeButton.png"))
home_2 = Button(
    image=button_home_2,
    borderwidth=0,
    highlightthickness=0,
    command=open_HomePage,
    relief="flat"
)
home_2.place(
    x=307.0,
    y=19.0,
    width=60.05078125,
    height=51.6392822265625
)

window.resizable(False, False)
center_window(window)
window.mainloop()
